// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Part1.ConsoleApp.Infrastructure.Persistence;

#nullable disable

namespace Part1.ConsoleApp.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250722141124_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Part1.ConsoleApp.Domain.Entities.Distribuidor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Telefono")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Distribuidor", (string)null);
                });

            modelBuilder.Entity("Part1.ConsoleApp.Domain.Entities.Marca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DistribuidorId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DistribuidorId");

                    b.ToTable("Marca", (string)null);
                });

            modelBuilder.Entity("Part1.ConsoleApp.Domain.Entities.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Peso")
                        .HasColumnType("real");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<string>("TipoProducto")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.HasKey("Id");

                    b.ToTable("Producto", (string)null);

                    b.HasDiscriminator<string>("TipoProducto").HasValue("Producto");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Part1.ConsoleApp.Domain.Entities.TipoMaterial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoMaterial", (string)null);
                });

            modelBuilder.Entity("Part1.ConsoleApp.Domain.Entities.Filamento", b =>
                {
                    b.HasBaseType("Part1.ConsoleApp.Domain.Entities.Producto");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DistribuidorId")
                        .HasColumnType("int");

                    b.Property<int?>("DistribuidorId1")
                        .HasColumnType("int");

                    b.Property<int>("MarcaId")
                        .HasColumnType("int");

                    b.Property<int>("TipoMaterialId")
                        .HasColumnType("int");

                    b.HasIndex("DistribuidorId");

                    b.HasIndex("DistribuidorId1");

                    b.HasIndex("MarcaId");

                    b.HasIndex("TipoMaterialId");

                    b.ToTable("Producto", t =>
                        {
                            t.Property("DistribuidorId")
                                .HasColumnName("Filamento_DistribuidorId");

                            t.Property("DistribuidorId1")
                                .HasColumnName("Filamento_DistribuidorId1");
                        });

                    b.HasDiscriminator().HasValue("Filamento");
                });

            modelBuilder.Entity("Part1.ConsoleApp.Domain.Entities.Insumo", b =>
                {
                    b.HasBaseType("Part1.ConsoleApp.Domain.Entities.Producto");

                    b.Property<int>("DistribuidorId")
                        .HasColumnType("int");

                    b.Property<int?>("DistribuidorId1")
                        .HasColumnType("int");

                    b.HasIndex("DistribuidorId");

                    b.HasIndex("DistribuidorId1");

                    b.HasDiscriminator().HasValue("Insumo");
                });

            modelBuilder.Entity("Part1.ConsoleApp.Domain.Entities.Marca", b =>
                {
                    b.HasOne("Part1.ConsoleApp.Domain.Entities.Distribuidor", "Distribuidor")
                        .WithMany("Marcas")
                        .HasForeignKey("DistribuidorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Distribuidor");
                });

            modelBuilder.Entity("Part1.ConsoleApp.Domain.Entities.Filamento", b =>
                {
                    b.HasOne("Part1.ConsoleApp.Domain.Entities.Distribuidor", "Distribuidor")
                        .WithMany()
                        .HasForeignKey("DistribuidorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Part1.ConsoleApp.Domain.Entities.Distribuidor", null)
                        .WithMany("Filamentos")
                        .HasForeignKey("DistribuidorId1");

                    b.HasOne("Part1.ConsoleApp.Domain.Entities.Marca", "Marca")
                        .WithMany("Filamentos")
                        .HasForeignKey("MarcaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Part1.ConsoleApp.Domain.Entities.TipoMaterial", "TipoMaterial")
                        .WithMany()
                        .HasForeignKey("TipoMaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Distribuidor");

                    b.Navigation("Marca");

                    b.Navigation("TipoMaterial");
                });

            modelBuilder.Entity("Part1.ConsoleApp.Domain.Entities.Insumo", b =>
                {
                    b.HasOne("Part1.ConsoleApp.Domain.Entities.Distribuidor", "Distribuidor")
                        .WithMany()
                        .HasForeignKey("DistribuidorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Part1.ConsoleApp.Domain.Entities.Distribuidor", null)
                        .WithMany("Insumos")
                        .HasForeignKey("DistribuidorId1");

                    b.Navigation("Distribuidor");
                });

            modelBuilder.Entity("Part1.ConsoleApp.Domain.Entities.Distribuidor", b =>
                {
                    b.Navigation("Filamentos");

                    b.Navigation("Insumos");

                    b.Navigation("Marcas");
                });

            modelBuilder.Entity("Part1.ConsoleApp.Domain.Entities.Marca", b =>
                {
                    b.Navigation("Filamentos");
                });
#pragma warning restore 612, 618
        }
    }
}
