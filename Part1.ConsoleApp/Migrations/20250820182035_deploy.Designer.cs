// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Part1.ConsoleApp.Infrastructure.Persistence;

#nullable disable

namespace Part1.ConsoleApp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250820182035_deploy")]
    partial class deploy
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Part1.ConsoleApp.Domain.Entities.Cobranza", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EstadoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaPago")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("MontoPagado")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("OrdenDeCompraId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EstadoId");

                    b.HasIndex("OrdenDeCompraId");

                    b.ToTable("Cobranza", (string)null);
                });

            modelBuilder.Entity("Part1.ConsoleApp.Domain.Entities.Distribuidor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Telefono")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Distribuidor", (string)null);
                });

            modelBuilder.Entity("Part1.ConsoleApp.Domain.Entities.DistribuidorMarca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DistribuidorId")
                        .HasColumnType("int");

                    b.Property<int>("MarcaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DistribuidorId");

                    b.HasIndex("MarcaId");

                    b.ToTable("DistribuidorMarca", (string)null);
                });

            modelBuilder.Entity("Part1.ConsoleApp.Domain.Entities.Estado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NombreEstado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Estado", (string)null);
                });

            modelBuilder.Entity("Part1.ConsoleApp.Domain.Entities.Marca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Marca", (string)null);
                });

            modelBuilder.Entity("Part1.ConsoleApp.Domain.Entities.OrdenDeCompra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EstadoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EstadoId");

                    b.ToTable("OrdenDeCompra", (string)null);
                });

            modelBuilder.Entity("Part1.ConsoleApp.Domain.Entities.OrdenDeCompraDetalle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("OrdenDeCompraId")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecioUnitario")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrdenDeCompraId");

                    b.HasIndex("ProductoId");

                    b.ToTable("OrdenDeCompraDetalle", (string)null);
                });

            modelBuilder.Entity("Part1.ConsoleApp.Domain.Entities.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("ImagenUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MarcaId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Precio")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<string>("TipoProducto")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.HasKey("Id");

                    b.HasIndex("MarcaId");

                    b.ToTable("Producto", (string)null);

                    b.HasDiscriminator<string>("TipoProducto").HasValue("Producto");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Part1.ConsoleApp.Domain.Entities.TipoMaterial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoMaterial", (string)null);
                });

            modelBuilder.Entity("Part1.ConsoleApp.Domain.Entities.Filamento", b =>
                {
                    b.HasBaseType("Part1.ConsoleApp.Domain.Entities.Producto");

                    b.Property<float>("Peso")
                        .HasColumnType("real");

                    b.Property<int>("TipoMaterialId")
                        .HasColumnType("int");

                    b.HasIndex("TipoMaterialId");

                    b.HasDiscriminator().HasValue("Filamento");
                });

            modelBuilder.Entity("Part1.ConsoleApp.Domain.Entities.Insumo", b =>
                {
                    b.HasBaseType("Part1.ConsoleApp.Domain.Entities.Producto");

                    b.HasDiscriminator().HasValue("Insumo");
                });

            modelBuilder.Entity("Part1.ConsoleApp.Domain.Entities.Cobranza", b =>
                {
                    b.HasOne("Part1.ConsoleApp.Domain.Entities.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Part1.ConsoleApp.Domain.Entities.OrdenDeCompra", "OrdenDeCompra")
                        .WithMany()
                        .HasForeignKey("OrdenDeCompraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estado");

                    b.Navigation("OrdenDeCompra");
                });

            modelBuilder.Entity("Part1.ConsoleApp.Domain.Entities.DistribuidorMarca", b =>
                {
                    b.HasOne("Part1.ConsoleApp.Domain.Entities.Distribuidor", "Distribuidor")
                        .WithMany("DistribuidorMarcas")
                        .HasForeignKey("DistribuidorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Part1.ConsoleApp.Domain.Entities.Marca", "Marca")
                        .WithMany("DistribuidorMarcas")
                        .HasForeignKey("MarcaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Distribuidor");

                    b.Navigation("Marca");
                });

            modelBuilder.Entity("Part1.ConsoleApp.Domain.Entities.OrdenDeCompra", b =>
                {
                    b.HasOne("Part1.ConsoleApp.Domain.Entities.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("Part1.ConsoleApp.Domain.Entities.OrdenDeCompraDetalle", b =>
                {
                    b.HasOne("Part1.ConsoleApp.Domain.Entities.OrdenDeCompra", "OrdenDeCompra")
                        .WithMany("Detalles")
                        .HasForeignKey("OrdenDeCompraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Part1.ConsoleApp.Domain.Entities.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrdenDeCompra");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("Part1.ConsoleApp.Domain.Entities.Producto", b =>
                {
                    b.HasOne("Part1.ConsoleApp.Domain.Entities.Marca", "Marca")
                        .WithMany()
                        .HasForeignKey("MarcaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Marca");
                });

            modelBuilder.Entity("Part1.ConsoleApp.Domain.Entities.Filamento", b =>
                {
                    b.HasOne("Part1.ConsoleApp.Domain.Entities.TipoMaterial", "TipoMaterial")
                        .WithMany()
                        .HasForeignKey("TipoMaterialId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TipoMaterial");
                });

            modelBuilder.Entity("Part1.ConsoleApp.Domain.Entities.Distribuidor", b =>
                {
                    b.Navigation("DistribuidorMarcas");
                });

            modelBuilder.Entity("Part1.ConsoleApp.Domain.Entities.Marca", b =>
                {
                    b.Navigation("DistribuidorMarcas");
                });

            modelBuilder.Entity("Part1.ConsoleApp.Domain.Entities.OrdenDeCompra", b =>
                {
                    b.Navigation("Detalles");
                });
#pragma warning restore 612, 618
        }
    }
}
